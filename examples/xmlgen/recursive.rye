
private {
	spaces: fn1 { .produce "" { + " " } }
	myprn: fn { t d } { prn spaces d , prn t } 
	is-not: fn { a b } { a = b |not }
	nl: does { print "" }
	
	proc: fn\par { val blk depth current } current-ctx  {
		sleep 10
		walk blk { :bk
			.peek :tok .type? .switch {
				xword {
					nl ,
					myprn tok depth ,
					proc val next bk inc depth tok
				}
				exword {
					print tok ,
					if not tok .to-word = to-word current { print "<!-- Tag mismatch -->" } ,
					return next bk
				}
				block {
					with val tok :vv \type? .is-not 'function \if { prn vv } ,
					next bk
				}
				string {
					myprn join { "<!-- " tok " -->" } depth ,
					next bk
				}
			}
		}
	}
	fn\par { val blk } current-ctx { proc val blk 0 'no }
	
} :xmlgen

xml-template: {
	<header>
 	  <author> ( name ) </author>
	</header>
	<data>
	  <fullname> ( .fullname ) </fullname>
	  <name id="first"> ( -> "name" ) </name>
	  "Surname next"
	  <surname> ( -> "surname" ) </surname>
	</data>
}  

fullname: fn1 { -> "name" :n , -> "surname" :s , n + " " + s }
input "Enter author's name: " :name
xmlgen dict { "name" "Jim" "surname" "Metelko" } xml-template







; match: fn { val blk } { .type? .switch blk } ; TODO -- match in switch confuses return function. Look into it soon.
