section "base" "base text" {

	group "spreadsheet" 
	""
	{ } {
		equals { spreadsheet { "a" } { 1 2 } |type? } 'spreadsheet
		Args:
		* columns
		* data
		}

	group "to-spreadsheet" 
	""
	{ } {
		equals { to-spreadsheet dict { "a" 1 "a" b } |type? } 'spreadsheet
		Args:
		* data
		}

	group "add-rows" 
	""
	{ } {
		equal {
		ref spreadsheet { "a" "b"  } { 1 10 2 20 } :sheet
		sheet .add-rows! [ 3 30 ] sheet .deref .length?
		} 3
		Args:
		* sheet -the sheet that is getting rows added to it
		* rows - a block containing one or more rows worth of values, or a SpreadsheetRow Native value
		}

	group "add-rows!" 
	""
	{ } {
		equal {
		ref spreadsheet { "a" "b"  } { 1 10 2 20 } :sheet
		sheet .add-rows! [ 3 30 ] sheet .deref .length?
		} 3
		Args:
		* sheet - the reference to the sheet that is getting rows added to it
		* rows - a block containing one or more rows worth of values, or a SpreadsheetRow Native value
		Tags: #spreasheet #mutation
		}

	group "update-row!" 
	""
	{ } {
		equal {
		spr1: ref spreadsheet { "a" "b" } { 1 10 2 20 }
		spr1 .update-row! 1 dict [ "a" 111 ]
		spr1 .deref .A1
		} 111
		equal {
		spr1: ref spreadsheet { "a" "b" } { 1 10 2 20 }
		incrA: fn { row } { row -> "a" + 1 :new-a dict { "a" new-a } }
		spr1 .update-row! 1 dict incrA
		spr1 .deref .A1
		} 11
		Args:
		* sheet-ref - A ref to a spreadsheet
		* idx - the index of the row to update, 1-based
		* updater - One of either a function, a dict, or a Spreadsheet Row
		Tags: #spreadsheet #mutation
		}

	group "remove-row!" 
	""
	{ } {
		equal {
		spr1: spreadsheet { "a" "b" } { 1 10 2 20 }
		spr1 .remove-row! 1
		spr1 .deref .A1
		} 2
		Args:
		* sheet-ref
		* row-idx - Index of row to remove, 1-based
		Tags: #spreadsheet #mutation
		}

	}

